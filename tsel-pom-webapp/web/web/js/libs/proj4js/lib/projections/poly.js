import e0fn from"../common/e0fn";import e1fn from"../common/e1fn";import e2fn from"../common/e2fn";import e3fn from"../common/e3fn";import adjust_lon from"../common/adjust_lon";import adjust_lat from"../common/adjust_lat";import mlfn from"../common/mlfn";import{EPSLN}from"../constants/values";import gN from"../common/gN";var MAX_ITER=20;export function init(){this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e=Math.sqrt(this.es),this.e0=e0fn(this.es),this.e1=e1fn(this.es),this.e2=e2fn(this.es),this.e3=e3fn(this.es),this.ml0=this.a*mlfn(this.e0,this.e1,this.e2,this.e3,this.lat0)};export function forward(t){var s,i,h,a=t.x,e=t.y,n=adjust_lon(a-this.long0);if(h=n*Math.sin(e),this.sphere)Math.abs(e)<=EPSLN?(s=this.a*n,i=-1*this.a*this.lat0):(s=this.a*Math.sin(h)/Math.tan(e),i=this.a*(adjust_lat(e-this.lat0)+(1-Math.cos(h))/Math.tan(e)));else if(Math.abs(e)<=EPSLN)s=this.a*n,i=-1*this.ml0;else{var o=gN(this.a,this.e,Math.sin(e))/Math.tan(e);s=o*Math.sin(h),i=this.a*mlfn(this.e0,this.e1,this.e2,this.e3,e)-this.ml0+o*(1-Math.cos(h))}return t.x=s+this.x0,t.y=i+this.y0,t};export function inverse(t){var s,i,h,a,e,n,o,r,m;if(h=t.x-this.x0,a=t.y-this.y0,this.sphere)if(Math.abs(a+this.a*this.lat0)<=EPSLN)s=adjust_lon(h/this.a+this.long0),i=0;else{var f;for(n=this.lat0+a/this.a,o=h*h/this.a/this.a+n*n,r=n,e=MAX_ITER;e;--e)if(r+=m=-1*(n*(r*(f=Math.tan(r))+1)-r-.5*(r*r+o)*f)/((r-n)/f-1),Math.abs(m)<=EPSLN){i=r;break}s=adjust_lon(this.long0+Math.asin(h*Math.tan(r)/this.a)/Math.sin(i))}else if(Math.abs(a+this.ml0)<=EPSLN)i=0,s=adjust_lon(this.long0+h/this.a);else{var l,M,p,c,u;for(n=(this.ml0+a)/this.a,o=h*h/this.a/this.a+n*n,r=n,e=MAX_ITER;e;--e)if(u=this.e*Math.sin(r),l=Math.sqrt(1-u*u)*Math.tan(r),M=this.a*mlfn(this.e0,this.e1,this.e2,this.e3,r),p=this.e0-2*this.e1*Math.cos(2*r)+4*this.e2*Math.cos(4*r)-6*this.e3*Math.cos(6*r),r-=m=(n*(l*(c=M/this.a)+1)-c-.5*l*(c*c+o))/(this.es*Math.sin(2*r)*(c*c+o-2*n*c)/(4*l)+(n-c)*(l*p-2/Math.sin(2*r))-p),Math.abs(m)<=EPSLN){i=r;break}l=Math.sqrt(1-this.es*Math.pow(Math.sin(i),2))*Math.tan(i),s=adjust_lon(this.long0+Math.asin(h*l/this.a)/Math.sin(i))}return t.x=s,t.y=i,t};export var names=["Polyconic","poly"];export default{init:init,forward:forward,inverse:inverse,names:names};