{
  "name": "oj-bind-for-each",
  "version": "5.1.0",
  "jetVersion": "5.1.0",
  "displayName": "Bind For Each",
  "preview": true,
  "description": "Binds items of an array to the specified markup section. The markup section is duplicated for each array item when element is rendered.",
  "properties": {
    "as": {
      "description": "An alias for the array item. This can be especially useful \nif multiple oj-bind-for-each elements are nested to provide access to the data \nfor each level of iteration.",
      "type": "string",
      "displayName": "As"
    },
    "data": {
      "description": "The array or an oj.DataProvider that you wish to iterate over. Required property. \nNote that the <oj-bind-for-each&gt; will dynamically update the generated \nDOM in response to changes if the value is an observableArray.",
      "type": "array|oj.DataProvider",
      "displayName": "Data"
    }
  },
  "slots": {
    "": {
      "description": "The oj-bind-for-each default slot is used to specify the template for binding items of an array if \nno named slots were defined by the application. The slot must be a <template> element. \nWhen the template is executed for each item, it will have access to the same binding context that is applied to the <oj-bind-for-each&gt; element. \nIn addition the binding context will contain the following properties: $current - An object that contains information for the current item. (See the table below for a list of properties available on $current) alias - If as attribute was specified, the value will be used to provide an application-named alias for $current. This can be especially useful if multiple oj-bind-for-each elements are nested to provide access to the data for each level of iteration. \n",
      "displayName": "default",
      "preview": true,
      "data": {
        "data": {
          "description": "The current array item being rendered.",
          "type": "Object"
        },
        "index": {
          "description": "Zero-based index of the current array item being rendered. The index value is not updated in response to array additions and removals and is only recommended for static arrays.",
          "type": "number"
        },
        "observableIndex": {
          "description": "An observable that refers to the zero-based index of the current array item being rendered. The observableIndex value is updated in response to array additions and removals and can be used for both static and dynamic arrays.",
          "type": "number"
        }
      }
    }
  }
}