define(["./persistenceManager","./persistenceUtils","./fetchStrategies","./cacheStrategies","./persistenceStoreManager","./impl/defaultCacheHandler","./impl/logger"],function(e,t,n,r,o,s,i){"use strict";function l(e){null==(e=e||{}).fetchStrategy&&(e.fetchStrategy=n.getCacheIfOfflineStrategy()),null==e.cacheStrategy&&(e.cacheStrategy=r.getHttpCacheHeaderStrategy()),e.requestHandlerOverride=e.requestHandlerOverride||{},null==e.requestHandlerOverride.handleGet&&(e.requestHandlerOverride.handleGet=this.handleGet),null==e.requestHandlerOverride.handlePost&&(e.requestHandlerOverride.handlePost=this.handlePost),null==e.requestHandlerOverride.handlePut&&(e.requestHandlerOverride.handlePut=this.handlePut),null==e.requestHandlerOverride.handlePatch&&(e.requestHandlerOverride.handlePatch=this.handlePatch),null==e.requestHandlerOverride.handleDelete&&(e.requestHandlerOverride.handleDelete=this.handleDelete),null==e.requestHandlerOverride.handleHead&&(e.requestHandlerOverride.handleHead=this.handleHead),null==e.requestHandlerOverride.handleOptions&&(e.requestHandlerOverride.handleOptions=this.handleOptions),Object.defineProperty(this,"_options",{value:e})}function u(t){if(e.isOnline())return e.browserFetch(t);return Promise.resolve(new Response(null,{status:503,statusText:"Must provide handlePost override for offline"}))}function a(e,t){var n=e;return(0,n._options.fetchStrategy)(t,n._options)}function d(t,n){var r=t;return e.isOnline()?e.browserFetch(n.clone()).then(function(e){return e.ok?(i.log("Offline Persistence Toolkit DefaultResponseProxy: Response is ok for default PUT Handler"),e):p(r,n,e,f)},function(e){return f(r,n)}):f(r,n)}function f(e,n){return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing offline logic for default PUT Handler"),t.requestToJSON(n).then(function(e){e.status=200,e.statusText="OK",e.headers["content-type"]="application/json",e.headers["x-oracle-jscpt-cache-expiration-date"]="";var n=e.headers["if-match"],r=e.headers["if-none-match"];if(n||r){i.log("Offline Persistence Toolkit DefaultResponseProxy: Generating ETag for offline Response for default PUT Handler");var o=Math.floor(1e6*Math.random());e.headers.etag=(Date.now()+o).toString(),e.headers["x-oracle-jscpt-etag-generated"]=e.headers.etag,delete e.headers["if-match"],delete e.headers["if-none-match"]}return t.responseFromJSON(e)})}function c(t,n){var r=t;return e.isOnline()?e.browserFetch(n.clone()).then(function(e){return e.ok?(i.log("Offline Persistence Toolkit DefaultResponseProxy: Response is ok for default DELETE Handler"),e):p(r,n,e,h)},function(e){return h(r,n)}):h(r,n)}function h(e,n){var r=e;return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing offline logic for default DELETE Handler"),t.requestToJSON(n).then(function(e){return e.status=200,e.statusText="OK",e.headers["content-type"]="application/json",e.headers["x-oracle-jscpt-cache-expiration-date"]="",t.responseFromJSON(e).then(function(s){var i=function(e){var t=e.url.split("/");return t[t.length-1]}(n),l=null;return r._options&&r._options.jsonProcessor&&r._options.jsonProcessor.shredder&&(l=r._options.jsonProcessor.shredder),l?l(s).then(function(n){if(n){var r=n[0].name;return o.openStore(r).then(function(n){return n.findByKey(i).then(function(n){return n?t.responseFromJSON(e).then(function(e){return t.setResponsePayload(e,n).then(function(e){return e})}):s})})}return s}):s})})}function p(e,t,n,r){var o=e;return n.status<500?Promise.resolve(n):r(o,t)}function P(t,n,r){return!e.isOnline()||r?e.getSyncManager().insertRequest(t,{undoRedoDataArray:n}):Promise.resolve()}function g(t,n){return"GET"==t.method||"HEAD"==t.method?e.getCache().hasMatch(t,{ignoreSearch:!0}).then(function(e){return e?O(t,n):Promise.resolve()}):O(t,n)}function O(e,t){return s.constructShreddedData(e,t).then(function(t){return t?function(e,t){var n=[];return t.forEach(function(t){var r=Object.keys(t)[0];n.push(function(e,t,n){return function(e,t,n){var r,s,i=[],l=function(n,u){return n<u.length&&"GET"!==e.method&&"HEAD"!==e.method?(r=u[n].key.toString(),s="DELETE"!==e.method?u[n].value:null,o.openStore(t).then(function(e){return e.findByKey(r).then(function(e){return i.push({key:r,undo:e,redo:s}),l(++n,u)},function(e){return i.push({key:r,undo:null,redo:s}),l(++n,u)})})):Promise.resolve(i)};return l(0,n)}(e,t,n).then(function(r){return"DELETE"===e.method?function(e,t,n){return o.openStore(e).then(function(e){return e.removeByKey(t[0].key)}).then(function(){return n.length>0?{storeName:e,operation:"remove",undoRedoData:n}:null})}(t,n,r):function(e,t,n){return o.openStore(e).then(function(e){return e.upsertAll(t)}).then(function(){return n.length>0?{storeName:e,operation:"upsert",undoRedoData:n}:null})}(t,n,r)})}(e,r,t[r]))}),Promise.all(n)}(e,t):Promise.resolve()})}return l.prototype.getFetchEventListener=function(){var e=this;return function(t){t.respondWith(e.processRequest(t.request))}},l.prototype.processRequest=function(e){var n=this,r=t.buildEndpointKey(e);return new Promise(function(o,l){s.registerEndpointOptions(r,n._options);var u=function(e,t){var n=e._options,r=null;return"POST"===t.method?r=n.requestHandlerOverride.handlePost:"GET"===t.method?r=n.requestHandlerOverride.handleGet:"PUT"===t.method?r=n.requestHandlerOverride.handlePut:"PATCH"===t.method?r=n.requestHandlerOverride.handlePatch:"DELETE"===t.method?r=n.requestHandlerOverride.handleDelete:"HEAD"===t.method?r=n.requestHandlerOverride.handleHead:"OPTIONS"===t.method&&(r=n.requestHandlerOverride.handleOptions),r}(n,e),a={},d=e.clone();i.log("Offline Persistence Toolkit DefaultResponseProxy: Calling requestHandler for request with enpointKey: "+r),u.call(n,e).then(function(o){return t.isCachedResponse(o)&&(i.log("Offline Persistence Toolkit DefaultResponseProxy: Response is cached for request with enpointKey: "+r),a.isCachedResponse=!0),o.ok?(i.log("Offline Persistence Toolkit DefaultResponseProxy: Response is ok for request with enpointKey: "+r),function(e,t,n){var r=e;return"GET"===t.method||"HEAD"===t.method?(0,r._options.cacheStrategy)(t,n,r._options):Promise.resolve(n)}(n,e,o)):(i.log("Offline Persistence Toolkit DefaultResponseProxy: Response is not ok for request with enpointKey: "+r),o)}).then(function(t){return a.response=t,t.ok?(i.log("Offline Persistence Toolkit DefaultResponseProxy: Response is ok after cacheStrategy for request with enpointKey: "+r),g(e,t)):(i.log("Offline Persistence Toolkit DefaultResponseProxy: Response is not ok after cacheStrategy for request with enpointKey: "+r),null)}).then(function(t){return P(e,t,a.isCachedResponse)}).then(function(){s.unregisterEndpointOptions(r),o(a.response)}).catch(function(e){i.log("Offline Persistence Toolkit DefaultResponseProxy: Insert Response in syncManager after error for request with enpointKey: "+r),P(d,null,!0).then(function(){s.unregisterEndpointOptions(r),l(e)},function(){s.unregisterEndpointOptions(r),l(e)})})})},l.prototype.handlePost=function(e){return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing Request with default POST Handler"),u(e)},l.prototype.handleGet=function(e){return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing Request with default GET Handler"),a(this,e)},l.prototype.handleHead=function(e){return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing Request with default HEAD Handler"),a(this,e)},l.prototype.handleOptions=function(e){return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing Request with default OPTIONS Handler"),u(e)},l.prototype.handlePut=function(e){return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing Request with default PUT Handler"),d(this,e)},l.prototype.handlePatch=function(e){return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing Request with default PATCH Handler"),u(e)},l.prototype.handleDelete=function(e){return i.log("Offline Persistence Toolkit DefaultResponseProxy: Processing Request with default DELETE Handler"),c(this,e)},{getResponseProxy:function(e){return new l(e)}}});