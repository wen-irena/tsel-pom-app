define(["../persistenceStoreManager","./OfflineCache","./logger"],function(e,r,n){"use strict";function t(){this._prefix="offlineCaches-",this._caches={},this._cachesArray=[]}return t.prototype.open=function(t){n.log("Offline Persistence Toolkit OfflineCacheManager: open() with name: "+t);var o=this,i=o._caches[t];return i?Promise.resolve(i):e.openStore(o._prefix+t).then(function(e){return i=new r(t,e),o._caches[t]=i,o._cachesArray.push(i),i})},t.prototype.match=function(e,r){n.log("Offline Persistence Toolkit OfflineCacheManager: match() for Request with url: "+e.url);var t=function(n,o){return o===n.length?Promise.resolve():n[o].match(e,r).then(function(e){return e?e.clone():t(n,o+1)})};return t(this._cachesArray,0)},t.prototype.has=function(e){return n.log("Offline Persistence Toolkit OfflineCacheManager: has() for name: "+e),this._caches[e]?Promise.resolve(!0):Promise.resolve(!1)},t.prototype.delete=function(e){n.log("Offline Persistence Toolkit OfflineCacheManager: delete() for name: "+e);var r=this,t=r._caches[e];return t?t.delete().then(function(){return r._cachesArray.splice(r._cachesArray.indexOf(e),1),delete r._caches[e],!0}):Promise.resolve(!1)},t.prototype.keys=function(){n.log("Offline Persistence Toolkit OfflineCacheManager: keys()");for(var e=[],r=0;r<this._cachesArray.length;r++)e.push(this._cachesArray[r].getName());return Promise.resolve(e)},new t});