import gauss from"./gauss";import adjust_lon from"../common/adjust_lon";export function init(){gauss.init.apply(this),this.rc&&(this.sinc0=Math.sin(this.phic0),this.cosc0=Math.cos(this.phic0),this.R2=2*this.rc,this.title||(this.title="Oblique Stereographic Alternative"))};export function forward(t){var i,s,h,a;return t.x=adjust_lon(t.x-this.long0),gauss.forward.apply(this,[t]),i=Math.sin(t.y),s=Math.cos(t.y),h=Math.cos(t.x),a=this.k0*this.R2/(1+this.sinc0*i+this.cosc0*s*h),t.x=a*s*Math.sin(t.x),t.y=a*(this.cosc0*i-this.sinc0*s*h),t.x=this.a*t.x+this.x0,t.y=this.a*t.y+this.y0,t};export function inverse(t){var i,s,h,a,r;if(t.x=(t.x-this.x0)/this.a,t.y=(t.y-this.y0)/this.a,t.x/=this.k0,t.y/=this.k0,r=Math.sqrt(t.x*t.x+t.y*t.y)){var e=2*Math.atan2(r,this.R2);i=Math.sin(e),s=Math.cos(e),a=Math.asin(s*this.sinc0+t.y*i*this.cosc0/r),h=Math.atan2(t.x*i,r*this.cosc0*s-t.y*this.sinc0*i)}else a=this.phic0,h=0;return t.x=h,t.y=a,gauss.inverse.apply(this,[t]),t.x=adjust_lon(t.x+this.long0),t};export var names=["Stereographic_North_Pole","Oblique_Stereographic","Polar_Stereographic","sterea","Oblique Stereographic Alternative"];export default{init:init,forward:forward,inverse:inverse,names:names};