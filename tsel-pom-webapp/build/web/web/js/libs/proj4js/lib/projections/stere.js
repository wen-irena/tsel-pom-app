import{EPSLN,HALF_PI}from"../constants/values";import sign from"../common/sign";import msfnz from"../common/msfnz";import tsfnz from"../common/tsfnz";import phi2z from"../common/phi2z";import adjust_lon from"../common/adjust_lon";export function ssfn_(t,s,h){return s*=h,Math.tan(.5*(HALF_PI+t))*Math.pow((1-s)/(1+s),.5*h)};export function init(){this.coslat0=Math.cos(this.lat0),this.sinlat0=Math.sin(this.lat0),this.sphere?1===this.k0&&!isNaN(this.lat_ts)&&Math.abs(this.coslat0)<=EPSLN&&(this.k0=.5*(1+sign(this.lat0)*Math.sin(this.lat_ts))):(Math.abs(this.coslat0)<=EPSLN&&(this.lat0>0?this.con=1:this.con=-1),this.cons=Math.sqrt(Math.pow(1+this.e,1+this.e)*Math.pow(1-this.e,1-this.e)),1===this.k0&&!isNaN(this.lat_ts)&&Math.abs(this.coslat0)<=EPSLN&&(this.k0=.5*this.cons*msfnz(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts))/tsfnz(this.e,this.con*this.lat_ts,this.con*Math.sin(this.lat_ts))),this.ms1=msfnz(this.e,this.sinlat0,this.coslat0),this.X0=2*Math.atan(this.ssfn_(this.lat0,this.sinlat0,this.e))-HALF_PI,this.cosX0=Math.cos(this.X0),this.sinX0=Math.sin(this.X0))};export function forward(t){var s,h,i,a,n,o,c=t.x,l=t.y,M=Math.sin(l),r=Math.cos(l),e=adjust_lon(c-this.long0);return Math.abs(Math.abs(c-this.long0)-Math.PI)<=EPSLN&&Math.abs(l+this.lat0)<=EPSLN?(t.x=NaN,t.y=NaN,t):this.sphere?(s=2*this.k0/(1+this.sinlat0*M+this.coslat0*r*Math.cos(e)),t.x=this.a*s*r*Math.sin(e)+this.x0,t.y=this.a*s*(this.coslat0*M-this.sinlat0*r*Math.cos(e))+this.y0,t):(h=2*Math.atan(this.ssfn_(l,M,this.e))-HALF_PI,a=Math.cos(h),i=Math.sin(h),Math.abs(this.coslat0)<=EPSLN?(n=tsfnz(this.e,l*this.con,this.con*M),o=2*this.a*this.k0*n/this.cons,t.x=this.x0+o*Math.sin(c-this.long0),t.y=this.y0-this.con*o*Math.cos(c-this.long0),t):(Math.abs(this.sinlat0)<EPSLN?(s=2*this.a*this.k0/(1+a*Math.cos(e)),t.y=s*i):(s=2*this.a*this.k0*this.ms1/(this.cosX0*(1+this.sinX0*i+this.cosX0*a*Math.cos(e))),t.y=s*(this.cosX0*i-this.sinX0*a*Math.cos(e))+this.y0),t.x=s*a*Math.sin(e)+this.x0,t))};export function inverse(t){var s,h,i,a,n;t.x-=this.x0,t.y-=this.y0;var o=Math.sqrt(t.x*t.x+t.y*t.y);if(this.sphere){var c=2*Math.atan(o/(.5*this.a*this.k0));return s=this.long0,h=this.lat0,o<=EPSLN?(t.x=s,t.y=h,t):(h=Math.asin(Math.cos(c)*this.sinlat0+t.y*Math.sin(c)*this.coslat0/o),s=Math.abs(this.coslat0)<EPSLN?this.lat0>0?adjust_lon(this.long0+Math.atan2(t.x,-1*t.y)):adjust_lon(this.long0+Math.atan2(t.x,t.y)):adjust_lon(this.long0+Math.atan2(t.x*Math.sin(c),o*this.coslat0*Math.cos(c)-t.y*this.sinlat0*Math.sin(c))),t.x=s,t.y=h,t)}if(Math.abs(this.coslat0)<=EPSLN){if(o<=EPSLN)return h=this.lat0,s=this.long0,t.x=s,t.y=h,t;t.x*=this.con,t.y*=this.con,i=o*this.cons/(2*this.a*this.k0),h=this.con*phi2z(this.e,i),s=this.con*adjust_lon(this.con*this.long0+Math.atan2(t.x,-1*t.y))}else a=2*Math.atan(o*this.cosX0/(2*this.a*this.k0*this.ms1)),s=this.long0,o<=EPSLN?n=this.X0:(n=Math.asin(Math.cos(a)*this.sinX0+t.y*Math.sin(a)*this.cosX0/o),s=adjust_lon(this.long0+Math.atan2(t.x*Math.sin(a),o*this.cosX0*Math.cos(a)-t.y*this.sinX0*Math.sin(a)))),h=-1*phi2z(this.e,Math.tan(.5*(HALF_PI+n)));return t.x=s,t.y=h,t};export var names=["stere","Stereographic_South_Pole","Polar Stereographic (variant B)"];export default{init:init,forward:forward,inverse:inverse,names:names,ssfn_:ssfn_};