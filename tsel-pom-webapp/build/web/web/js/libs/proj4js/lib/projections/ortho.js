import adjust_lon from"../common/adjust_lon";import asinz from"../common/asinz";import{EPSLN,HALF_PI}from"../constants/values";export function init(){this.sin_p14=Math.sin(this.lat0),this.cos_p14=Math.cos(this.lat0)};export function forward(t){var s,a,i,n,o,h,r,e=t.x,l=t.y;return i=adjust_lon(e-this.long0),s=Math.sin(l),a=Math.cos(l),n=Math.cos(i),1,((o=this.sin_p14*s+this.cos_p14*a*n)>0||Math.abs(o)<=EPSLN)&&(h=1*this.a*a*Math.sin(i),r=this.y0+1*this.a*(this.cos_p14*s-this.sin_p14*a*n)),t.x=h,t.y=r,t};export function inverse(t){var s,a,i,n,o,h,r;return t.x-=this.x0,t.y-=this.y0,s=Math.sqrt(t.x*t.x+t.y*t.y),a=asinz(s/this.a),i=Math.sin(a),n=Math.cos(a),h=this.long0,Math.abs(s)<=EPSLN?(r=this.lat0,t.x=h,t.y=r,t):(r=asinz(n*this.sin_p14+t.y*i*this.cos_p14/s),o=Math.abs(this.lat0)-HALF_PI,Math.abs(o)<=EPSLN?(h=this.lat0>=0?adjust_lon(this.long0+Math.atan2(t.x,-t.y)):adjust_lon(this.long0-Math.atan2(-t.x,t.y)),t.x=h,t.y=r,t):(h=adjust_lon(this.long0+Math.atan2(t.x*i,s*this.cos_p14*n-t.y*this.sin_p14*i)),t.x=h,t.y=r,t))};export var names=["ortho"];export default{init:init,forward:forward,inverse:inverse,names:names};