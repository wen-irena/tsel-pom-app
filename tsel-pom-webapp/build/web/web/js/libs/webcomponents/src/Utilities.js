const reservedTagList=new Set(["annotation-xml","color-profile","font-face","font-face-src","font-face-uri","font-face-format","font-face-name","missing-glyph"]);export function isValidCustomElementName(e){const n=reservedTagList.has(e),t=/^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(e);return!n&&t};export function isConnected(e){const n=e.isConnected;if(void 0!==n)return n;let t=e;for(;t&&!(t.__CE_isImportDocument||t instanceof Document);)t=t.parentNode||(window.ShadowRoot&&t instanceof ShadowRoot?t.host:void 0);return!(!t||!(t.__CE_isImportDocument||t instanceof Document))};function nextSiblingOrAncestorSibling(e,n){let t=n;for(;t&&t!==e&&!t.nextSibling;)t=t.parentNode;return t&&t!==e?t.nextSibling:null}function nextNode(e,n){return n.firstChild?n.firstChild:nextSiblingOrAncestorSibling(e,n)}export function walkDeepDescendantElements(e,n,t=new Set){let o=e;for(;o;){if(o.nodeType===Node.ELEMENT_NODE){const i=o;n(i);const r=i.localName;if("link"===r&&"import"===i.getAttribute("rel")){const r=i.import;if(r instanceof Node&&!t.has(r)){t.add(r);for(let e=r.firstChild;e;e=e.nextSibling)walkDeepDescendantElements(e,n,t)}o=nextSiblingOrAncestorSibling(e,i);continue}if("template"===r){o=nextSiblingOrAncestorSibling(e,i);continue}const s=i.__CE_shadowRoot;if(s)for(let e=s.firstChild;e;e=e.nextSibling)walkDeepDescendantElements(e,n,t)}o=nextNode(e,o)}};export function setPropertyUnchecked(e,n,t){e[n]=t};