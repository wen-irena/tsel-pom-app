{
  "name": "oj-label-value",
  "version": "5.1.0",
  "jetVersion": "5.1.0",
  "displayName": "Label Value",
  "preview": true,
  "description": "Used to specify label element(s) and value element(s) in a single layout element.",
  "properties": {
    "labelEdge": {
      "description": "Specifies how the label is aligned with its value component.\nIf the value is 'inherit', it will inherit label-edge from it's closest custom element ancestor element. If the ancestor doesn't have a label-width attribute, the default is \"top\".",
      "type": "string",
      "displayName": "Label Edge",
      "value": "inherit",
      "enumValues": [
        "start",
        "top"
      ],
      "propertyEditorValues": {
        "start": {
          "description": "Label is inline with the start of its value component",
          "displayName": "Start"
        },
        "top": {
          "description": "Label is on top of its value component",
          "displayName": "Top"
        }
      }
    },
    "labelWidth": {
      "description": "Specifies the label width.\nThis can be any legal CSS width or 'inherit',\nwhich will inherit label-width from it's closest custom element ancestor element. If the value is \"inherit\" and ancestor doesn't have a label-width attribute, the default is \"33%\".",
      "type": "string",
      "displayName": "Label Width",
      "value": "inherit"
    }
  },
  "methods": {
    "setProperty": {
      "description": "Sets a property or a single subproperty for complex properties and notifies the component\nof the change, triggering a [property]Changed event.",
      "params": [
        {
          "name": "property",
          "description": "The property name to set. Supports dot notation for subproperty access.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The new value to set the property to.",
          "type": "*"
        }
      ],
      "return": "void"
    },
    "getProperty": {
      "description": "Retrieves a value for a property or a single subproperty for complex properties.",
      "params": [
        {
          "name": "property",
          "description": "The property name to get. Supports dot notation for subproperty access.",
          "type": "string"
        }
      ],
      "return": "*"
    },
    "setProperties": {
      "description": "Performs a batch set of properties.",
      "params": [
        {
          "name": "properties",
          "description": "An object containing the property and value pairs to set.",
          "type": "Object"
        }
      ],
      "return": "void"
    },
    "refresh": {
      "description": "Refreshes the visual state of the component.",
      "return": "void"
    }
  }
}